import React, { useState } from "react";
import Table from "../table/table";
import "./reportTable.css";
import { Reports } from "../../data/data";
import WalletFilter from "../walletFilter/walletFilter";

const ReportTable = () => {
  const [search, setSearch] = useState("");
  const viewData = ["Today", "Yesterday", "1 Week", "1 Month", "1 Year"];
  const statusData = ["Downloaded", "Draft"];
  return (
    <Table
      action={(e) => {
        setSearch(e.target.value);
      }}
      title="Reports"
      tableHead={
        <div className="report-table-head">
          <p>Title</p>
          <p>Generated by</p>
          <p>Reference </p>
          <p>Status</p>
          <p>Date | Time</p>
        </div>
      }
      head={
        <div className="report-filter">
          <div className="report-filter-single">
            <WalletFilter name="Status" data={statusData} />
          </div>
          <div className="report-filter-single">
            <WalletFilter name="View" data={viewData} />
          </div>
        </div>
      }>
      {Reports?.filter((item) => {
        if (search === "") {
          return item;
        } else if (item.name.toLowerCase().includes(search.toLowerCase())) {
          return item;
        } else {
          return null;
        }
      })?.map((items, index) => {
        return (
          <div className="report-table-body" key={index}>
            <p>{items.title}</p>
            <p>{items.generate}</p>
            <p>{items.ref}</p>
            <p className={items.status === "Downloaded" ? "report-download" : items.status === "Draft" ? "report-draft" : null}>
              <span>{items.status}</span>
            </p>
            <p>{items.date}</p>
          </div>
        );
      })}
      <table class="table">
        <tbody>
          {Reports?.filter((item) => {
            if (search === "") {
              return item;
            } else if (item.name.toLowerCase().includes(search.toLowerCase())) {
              return item;
            } else if (item.mail.toLowerCase().includes(search.toLowerCase())) {
              return item;
            } else {
              return null;
            }
          })?.map((items, index) => {
            return (
              <tr key={index}>
                <td data-label="Title">{items.title}</td>
                <td data-label="Generated By">{items.generate}</td>
                <td data-label="Reference">{items.ref}</td>
                <td data-label="Status" className={items.status === "Downloaded" ? "report-download" : items.status === "Draft" ? "report-draft" : null}>
                  <span>{items.status}</span>
                </td>
                <td data-label="Date | Time">{items.date}</td>
              </tr>
            );
          })}
        </tbody>
      </table>
    </Table>
  );
};

export default ReportTable;
